buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.netflix.nebula:nebula-publishing-plugin:8.1.0"
        classpath "com.netflix.nebula:nebula-release-plugin:11.0.0"
        classpath "com.netflix.nebula:nebula-bintray-plugin:7.3.0"
        classpath "org.ajoberstar:gradle-git-publish:2.1.1"
    }
}


allprojects {
    apply plugin: "nebula.release"

    group = 'com.github.tinesoft'

    repositories {
      jcenter()
    }
}

subprojects { apply plugin: "java" }

project(':spring-esdata-loader-junit4') {
    apply plugin: 'java-library'
    dependencies {
        api project(':spring-esdata-loader-core')
    }
}

project(':spring-esdata-loader-junit-jupiter') {
    apply plugin: 'java-library'
    dependencies {
        api project(':spring-esdata-loader-core')
    }
}

project(':spring-esdata-loader-demo') {
    apply plugin: 'java'
    dependencies {
        implementation project(':spring-esdata-loader-junit4'), project(':spring-esdata-loader-junit-jupiter')
    }
}

def publishedProjects = subprojects.findAll { it.name != 'spring-esdata-loader-demo' }
task aggregateJavadocs(type: Javadoc) {

    description = 'Aggregates Javadoc API documentation of all subprojects.'
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    dependsOn publishedProjects.javadoc

    source publishedProjects.javadoc.source
    destinationDir file("$rootProject.buildDir/docs/javadoc")
    classpath = files(publishedProjects.javadoc.classpath)
}

apply from: "$rootDir/gradle/ghpages.gradle"

